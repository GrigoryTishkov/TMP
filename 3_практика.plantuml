@startuml
allowmixing

' Варианты использования
actor Работник
rectangle "Информационная система склада" {
    usecase "Учет поступления товаров" as incoming
    usecase "Учет отгрузки товаров" as outgoing
    usecase "Определение мест хранения товаров" as storage_location

    Работник -- incoming
    Работник -- outgoing
    Работник -- storage_location
}

' Диаграмма классов
package "Информационная система склада" {
    class Склад {
        + addProduct()
        + removeProduct()
    }

    class Товар {
        - id : int
        - name : string
        - quantity : int
    }

    class МестоХранения {
        - id : int
        - location : string
    }

    Склад "1" *-- "n" Товар : содержит
    Товар "1" -- "1" МестоХранения : находится на
}

' Диаграмма последовательности
actor Работник
entity Склад
entity Товар
entity МестоХранения

Работник -> Склад : добавить товар
Склад -> Товар : создать
Товар -> МестоХранения : выбрать место хранения
МестоХранения --> Склад : подтвердить
Склад --> Работник : подтвердить добавление

Работник -> Склад : удалить товар
Склад --> Работник : подтвердить удаление

' Диаграмма развертывания
node Пользователь
node "Информационная система склада" {
    component Склад
    component Товар
    component МестоХранения
}

node "База данных" as БД
node "Сервер приложений" as Сервер

Пользователь --> Сервер : HTTP запрос
Сервер --> БД : Запрос к базе данных
Сервер --> Склад : Обработка данных
Склад --> Товар : Работа с товарами
Склад --> МестоХранения : Работа с местами хранения
@enduml
